{
  "name": "loopback-push-notification",
  "version": "1.2.0",
  "description": "Loopback Push Notification",
  "main": "index.js",
  "scripts": {
    "test": "mocha --timeout 30000 test/*test.js"
  },
  "dependencies": {
    "async": "~0.2.10",
    "debug": "~0.7.4",
    "apn": "~1.4.4",
    "node-gcm": "~0.9.9",
    "mpns": "~2.1.0"
  },
  "peerDependencies": {
    "loopback": "1.x >=1.7.0"
  },
  "devDependencies": {
    "loopback": "1.x >=1.7.0",
    "loopback-connector-mongodb": "1.x",
    "loopback-testing": "~0.1.2",
    "should": "*",
    "mocha": "*",
    "sinon": "*",
    "chai": "*",
    "deep-extend": "*"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/strongloop/loopback-push-notification.git"
  },
  "license": {
    "name": "Dual Artistic-2.0/StrongLoop",
    "url": "https://github.com/strongloop/loopback-push-notification/blob/master/LICENSE"
  },
  "readme": "# LoopBack Push Notification\n\nThis module provides a set of LoopBack models to enable mobile device push notifications.\n\nPlease see the full documentation: [Creating push notifications](http://docs.strongloop.com/display/DOC/Creating+push+notifications).\n\n## Architecture\n\n![push-notification.png](push-notification.png)\n\n## Key Components\n\n* Device model and APIs to manage devices with applications and users\n* Application model to provide push settings for device types such as ios and\nandroid\n* Notification model to capture notification messages and persist scheduled\nnotifications\n* Optional Job to take scheduled notification requests\n* Push connector that interact with device registration records and push\nproviders such as APNS, GCM, and MPNS.\n* Push model to provide high level APIs for device-independent push notifications\n\n## Samples\n\n### Node.js server\n\nAn [example LoopBack server application](/example/server) is provided.  To run\n\nTo run it:\n\n    cd example/server\n    node app\n\nOpen your browser to [http://127.0.0.1:3010](http://127.0.0.1:3010).\n\nBy default, the app uses an in-memory store for the application/installation data.\nTo change to a MongoDB instance, set the MONGODB environment variable to the MongoDB URL. For example,\n\n    MONGODB=mongodb://localhost/demo node app\n\n### iOS client\n\nThe [iOS example app](/example/ios) uses LoopBack the LoopBack iOS SDK to enable\nand handle push notifications. \n\n### Android client\n\nThe [Android example app](/example/android) uses LoopBack Android SDK to enable\nand handle push notifications. \n\n## References\n\n- https://developer.apple.com/library/ios/documentation/NetworkingInternet/Conceptual/RemoteNotificationsPG/Chapters/ApplePushService.html\n- http://developer.android.com/google/gcm/index.html\n- http://msdn.microsoft.com/en-us/library/windowsphone/develop/hh202945(v=vs.105).aspx\n- https://github.com/argon/node-apn\n- https://github.com/logicalparadox/apnagent-ios\n- https://blog.engineyard.com/2013/developing-ios-push-notifications-nodejs\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/strongloop/loopback-push-notification/issues"
  },
  "homepage": "https://github.com/strongloop/loopback-push-notification",
  "_id": "loopback-push-notification@1.2.0",
  "_shasum": "9fde0fb2599ffe861c9e1099afdb4c1891d41cc8",
  "_from": "loopback-push-notification@~1.2.0",
  "_resolved": "https://registry.npmjs.org/loopback-push-notification/-/loopback-push-notification-1.2.0.tgz"
}
